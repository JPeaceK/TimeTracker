@startuml
skinparam classAtributeIconSize 0
abstract class Activity{
# name: String
# initialTime: LocalDateTime
# totalTime: long
# clock: Clock
# finaltime: LocalDateTime
# father: Activity
+ {abstract}acceptVisitor(visitor:Visitor): void
+ {abstract}setFinaltime(time:LocalDateTime, seconds:long): void
+ {abstract}start(): void
}

class Project{

- activities: Activity []
+ setFinalAndTotalTime(finalTime: LocalDateTime,seconds: long): void
+ start(): void
+ acceptVisitor(visitor:Visitor): void

}

class Task{
- active: boolean
- started: boolean
- intervals: Interval[]
+ setFinalAndTotalTime(finalTime:LocalDateTime, seconds:long): void
+ start(): void
+ stop(): void
+ acceptVisitor(visitor:Visitor): void

}

class Interval{
- initialTime: LocalDateTime
- finalTime: LocalDateTime
- timeInterval: long
- clock: Clock
- father: Taskk
- printer: Printer

+ acceptVisitor(visitor: Visitor);
+ update(observable:Observable, arg:Object): void
}





class Main{
+ Main()
}


class Printer{
+ visitTask(task:Task):void
+ visitProject(project:Project):void
+ visitInterval(interval:Interval):void
}

class Clock
{
- actualTime: LocalDateTime
- clock: Clock 
+ getInstance(): Clock

}


package java.util <<Folder>>{

abstract class Observable{
+addObserver(ob:Observer)
+deleteObserver(ob:Observer)
+setChanged()
+notifyObservers(arg0:Observable, arg1: Object)
}
interface Observer{
+ update(arg0:Observable, arg1: Object)
}


}

interface Visitor{
+ VisitTask : void
+ VisitProject: void
+ VisitInterval: void

}

class Save{
- textEditor: FileWriter
- jsonTree: JSONObject
- root: Project

+ visitTask(task:Task):void
+ visitProject(project:Project):void
+ visitInterval(interval:Interval):void
+ writeDocument():void
}
class Load{
- jsonTree: JSONObject
- father: Activity
+ visitTask(task:Task):void
+ visitProject(project:Project):void
+ visitInterval(interval:Interval):void
+ load():Project
}
Task --|> Activity
Project --|> Activity
Project o--> "*" Activity
Observable o--> "1..*" Observer

Clock --|> Observable 
Task -->"0..*" Interval
Interval ..|> "1" Observer

Printer ..|> Visitor
Save ..|> Visitor
Load ..|> Visitor
@enduml
